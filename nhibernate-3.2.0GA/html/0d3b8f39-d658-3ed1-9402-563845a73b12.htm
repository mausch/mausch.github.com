<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>Iesi.Collections.Generic Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Iesi.Collections.Generic namespace" /><meta name="Microsoft.Help.F1" content="Iesi.Collections.Generic" /><meta name="Microsoft.Help.Id" content="N:Iesi.Collections.Generic" /><meta name="Description" content="[Missing &lt;summary&gt; documentation for &quot;N:Iesi.Collections.Generic&quot;]" /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="Iesi.Collections.Generic" /><meta name="file" content="0d3b8f39-d658-3ed1-9402-563845a73b12" /><meta name="guid" content="0d3b8f39-d658-3ed1-9402-563845a73b12" /><xml><MSHelp:Attr Name="AssetID" Value="N:Iesi.Collections.Generic" /><MSHelp:TOCTitle Title="Iesi.Collections.Generic Namespace" /><MSHelp:RLTitle Title="Iesi.Collections.Generic Namespace ()" /><MSHelp:Keyword Index="A" Term="N:Iesi.Collections.Generic" /><MSHelp:Keyword Index="A" Term="frlrfIesiCollectionsGeneric" /><MSHelp:Keyword Index="K" Term="Iesi.Collections.Generic namespace" /><MSHelp:Keyword Index="F" Term="Iesi.Collections.Generic" /><MSHelp:Attr Name="HelpPriority" Value="1" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="[Missing &lt;summary&gt; documentation for &quot;N:Iesi.Collections.Generic&quot;]" /></xml></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">NHibernate API Reference</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Iesi.Collections.Generic Namespace</span></td></tr><tr id="headerTableRow3"><td align="left"><span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('http://groups.google.com/group/nhibernate-development','NHibernate API Reference','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary"><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "N:Iesi.Collections.Generic"]</p></div><h1 class="heading"><span onclick="ExpandCollapse(classToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(classToggle, event)" tabindex="0"><img id="classToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Classes</span></h1><div id="classSection" class="section" name="collapseableSection" style=""><table id="typeList" class="members" frame="lhs" cellpadding="2"><col width="10%" /><tr><th class="iconColumn">
           
       </th><th class="nameColumn">Class</th><th class="descriptionColumn">Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="2845b511-2d81-2ce0-b57d-15da90c87663.htm">DictionarySet<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></td><td><div class="summary"><p><span class="code">DictionarySet</span> is an abstract class that supports the creation of new <span class="code">Set</span>
             types where the underlying data store is an <span class="code">IDictionary</span> instance.</p><p>You can use any object that implements the <span class="code">IDictionary</span> interface to hold set data.
             You can define your own, or you can use one of the objects provided in the Framework.   
             The type of <span class="code">IDictionary</span> you choose will affect both the performance and the behavior
             of the <span class="code">Set</span> using it. </p><p>To make a <span class="code">Set</span> typed based on your own <span class="code">IDictionary</span>, simply derive a
             new class with a constructor that takes no parameters.  Some <span class="code">Set</span> implmentations
             cannot be defined with a default constructor.  If this is the case for your class, 
             you will need to override <span class="code">Clone()</span> as well.</p><p>It is also standard practice that at least one of your constructors takes an <span class="code">ICollection</span> or 
             an <span class="code">ISet</span> as an argument.</p></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="6ae38937-779d-a132-ecb5-a375285185be.htm">HashedSet<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></td><td><div class="summary">
            Implements a <span class="code">Set</span> based on a Dictionary (which is equivalent of 
            non-genric <span class="code">HashTable</span>) This will give the best lookup, add, and remove
            performance for very large data-sets, but iteration will occur in no particular order.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="cc8486cc-3184-252e-6d10-8379ed5d6051.htm">ImmutableSet<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></td><td><div class="summary"><p>Implements an immutable (read-only) <span class="code">Set</span> wrapper.</p><p>Although this is advertised as immutable, it really isn't.  Anyone with access to the
            <span class="code">basisSet</span> can still change the data-set.  So <span class="code">GetHashCode()</span> is not implemented
            for this <span class="code">Set</span>, as is the case for all <span class="code">Set</span> implementations in this library.
            This design decision was based on the efficiency of not having to <span class="code">Clone()</span> the 
            <span class="code">basisSet</span> every time you wrap a mutable <span class="code">Set</span>.</p></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="32f6fa1d-485a-8525-19a4-f7f9cbf2d002.htm">OrderedSet<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></td><td><div class="summary">
            Implements an ordered <span class="code">Set</span> based on a dictionary.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="eeafb299-1efc-20cb-eab0-3a4ac0119290.htm">Set<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></td><td><div class="summary"><p>A collection that contains no duplicate elements.  This class models the mathematical
            <span class="code">Set</span> abstraction, and is the base class for all other <span class="code">Set</span> implementations.  
            The order of elements in a set is dependant on (a)the data-structure implementation, and 
            (b)the implementation of the various <span class="code">Set</span> methods, and thus is not guaranteed.</p><p>None of the <span class="code">Set</span> implementations in this library are guranteed to be thread-safe
            in any way unless wrapped in a <span class="code">SynchronizedSet</span>.</p><p>The following table summarizes the binary operators that are supported by the <span class="code">Set</span> class.</p><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>Operation</th><th>Description</th><th>Method</th><th>Operator</th></tr><tr><td>Union (OR)</td><td>Element included in result if it exists in either <span class="code">A</span> OR <span class="code">B</span>.</td><td><span class="code">Union()</span></td><td><span class="code">|</span></td></tr><tr><td>Intersection (AND)</td><td>Element included in result if it exists in both <span class="code">A</span> AND <span class="code">B</span>.</td><td><span class="code">InterSect()</span></td><td><span class="code">&amp;</span></td></tr><tr><td>Exclusive Or (XOR)</td><td>Element included in result if it exists in one, but not both, of <span class="code">A</span> and <span class="code">B</span>.</td><td><span class="code">ExclusiveOr()</span></td><td><span class="code">^</span></td></tr><tr><td>Minus (n/a)</td><td>Take all the elements in <span class="code">A</span>.  Now, if any of them exist in <span class="code">B</span>, remove
            		them.  Note that unlike the other operators, <span class="code">A - B</span> is not the same as <span class="code">B - A</span>.</td><td><span class="code">Minus()</span></td><td><span class="code">-</span></td></tr></table></div></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="1ea7dd00-1c52-8e5d-bdaa-8f1ea045e7b8.htm">SortedSet<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></td><td><div class="summary">
            Implements a <span class="code">Set</span> based on a sorted tree.  This gives good performance for operations on very
            large data-sets, though not as good - asymptotically - as a <span class="code">HashedSet</span>.  However, iteration
            occurs in order.  Elements that you put into this type of collection must implement <span class="code">IComparable</span>,
            and they must actually be comparable.  You can't mix <span class="code">string</span> and <span class="code">int</span> values, for example.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="9888ea45-6794-ac29-3f8b-1b5c2991dc43.htm">SynchronizedSet<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></td><td><div class="summary"><p>Implements a thread-safe <span class="code">Set</span> wrapper.  The implementation is extremely conservative, 
            serializing critical sections to prevent possible deadlocks, and locking on everything.
            The one exception is for enumeration, which is inherently not thread-safe.  For this, you
            have to <span class="code">lock</span> the <span class="code">SyncRoot</span> object for the duration of the enumeration.</p></div></td></tr></table></div><h1 class="heading"><span onclick="ExpandCollapse(interfaceToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(interfaceToggle, event)" tabindex="0"><img id="interfaceToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Interfaces</span></h1><div id="interfaceSection" class="section" name="collapseableSection" style=""><table id="typeList" class="members" frame="lhs" cellpadding="2"><col width="10%" /><tr><th class="iconColumn">
           
       </th><th class="nameColumn">Interface</th><th class="descriptionColumn">Description</th></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="2387e336-1010-d597-5086-ecf114c20388.htm">ISet<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></td><td><div class="summary"><p>A collection that contains no duplicate elements.  This interface models the mathematical
            <span class="code">Set</span> abstraction.    
            The order of elements in a set is dependant on (a)the data-structure implementation, and 
            (b)the implementation of the various <span class="code">Set</span> methods, and thus is not guaranteed.</p><p>None of the <span class="code">Set</span> implementations in this library are guranteed to be thread-safe
            in any way unless wrapped in a <span class="code">SynchronizedSet</span>.</p><p>The following table summarizes the binary operators that are supported by the <span class="code">Set</span> class.</p><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th>Operation</th><th>Description</th><th>Method</th></tr><tr><td>Union (OR)</td><td>Element included in result if it exists in either <span class="code">A</span> OR <span class="code">B</span>.</td><td><span class="code">Union()</span></td></tr><tr><td>Intersection (AND)</td><td>Element included in result if it exists in both <span class="code">A</span> AND <span class="code">B</span>.</td><td><span class="code">InterSect()</span></td></tr><tr><td>Exclusive Or (XOR)</td><td>Element included in result if it exists in one, but not both, of <span class="code">A</span> and <span class="code">B</span>.</td><td><span class="code">ExclusiveOr()</span></td></tr><tr><td>Minus (n/a)</td><td>Take all the elements in <span class="code">A</span>.  Now, if any of them exist in <span class="code">B</span>, remove
            		them.  Note that unlike the other operators, <span class="code">A - B</span> is not the same as <span class="code">B - A</span>.</td><td><span class="code">Minus()</span></td></tr></table></div></div></td></tr></table></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:http%3a%2f%2fgroups.google.com%2fgroup%2fnhibernate-development?Subject=NHibernate API Reference">nhibernate team</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p /><a href="www.nhforge.org" target="_blank">NHibernate</a></div></div></body></html>