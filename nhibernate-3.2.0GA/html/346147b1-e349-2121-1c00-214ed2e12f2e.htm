<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>NHibernate.Event.Default Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="NHibernate.Event.Default namespace" /><meta name="Microsoft.Help.F1" content="NHibernate.Event.Default" /><meta name="Microsoft.Help.Id" content="N:NHibernate.Event.Default" /><meta name="Description" content="[Missing &lt;summary&gt; documentation for &quot;N:NHibernate.Event.Default&quot;]" /><meta name="Microsoft.Help.ContentType" content="Reference" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="NHibernate.Event.Default" /><meta name="file" content="346147b1-e349-2121-1c00-214ed2e12f2e" /><meta name="guid" content="346147b1-e349-2121-1c00-214ed2e12f2e" /><xml><MSHelp:Attr Name="AssetID" Value="N:NHibernate.Event.Default" /><MSHelp:TOCTitle Title="NHibernate.Event.Default Namespace" /><MSHelp:RLTitle Title="NHibernate.Event.Default Namespace ()" /><MSHelp:Keyword Index="A" Term="N:NHibernate.Event.Default" /><MSHelp:Keyword Index="A" Term="frlrfNHibernateEventDefault" /><MSHelp:Keyword Index="K" Term="NHibernate.Event.Default namespace" /><MSHelp:Keyword Index="F" Term="NHibernate.Event.Default" /><MSHelp:Attr Name="HelpPriority" Value="1" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="[Missing &lt;summary&gt; documentation for &quot;N:NHibernate.Event.Default&quot;]" /></xml></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /><input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">NHibernate API Reference</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">NHibernate.Event.Default Namespace</span></td></tr><tr id="headerTableRow3"><td align="left"><span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('http://groups.google.com/group/nhibernate-development','NHibernate API Reference','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="summary"><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "N:NHibernate.Event.Default"]</p></div><h1 class="heading"><span onclick="ExpandCollapse(classToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(classToggle, event)" tabindex="0"><img id="classToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Classes</span></h1><div id="classSection" class="section" name="collapseableSection" style=""><table id="typeList" class="members" frame="lhs" cellpadding="2"><col width="10%" /><tr><th class="iconColumn">
           
       </th><th class="nameColumn">Class</th><th class="descriptionColumn">Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="6ca1ef08-93e3-a912-3dab-7f4bc3d825a4.htm">AbstractFlushingEventListener</a></td><td><div class="summary">
            A convenience base class for listeners whose functionality results in flushing.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="5fc32219-a3b4-8f7a-904f-613f60d8d257.htm">AbstractLockUpgradeEventListener</a></td><td><div class="summary"> 
            A convenience base class for listeners that respond to requests to perform a
            pessimistic lock upgrade on an entity. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="5d2e36df-e28e-0ba2-f51b-e339166face2.htm">AbstractReassociateEventListener</a></td><td><div class="summary">
            A convenience base class for listeners that respond to requests to reassociate an entity
            to a session ( such as through lock() or update() ).
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="005be2af-b0cd-5170-7425-38a250da85b0.htm">AbstractSaveEventListener</a></td><td><div class="summary"> 
            A convenience bas class for listeners responding to save events. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="f8edf18d-46cb-0471-71e2-1c01048eb8c8.htm">AbstractVisitor</a></td><td><div class="summary"> 
            Abstract superclass of algorithms that walk a tree of property values of an entity, and
            perform specific functionality for collections, components and associated entities. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="8e26c551-771a-302e-2f86-1a341729f8fb.htm">DefaultAutoFlushEventListener</a></td><td><div class="summary">
            Defines the default flush event listeners used by hibernate for
            flushing session state in response to generated auto-flush events.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="f69c6008-2576-3a5e-a9d7-01ff5e776ba5.htm">DefaultDeleteEventListener</a></td><td><div class="summary"> 
            Defines the default delete event listener used by hibernate for deleting entities
            from the datastore in response to generated delete events. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="4711077d-5a92-e1c0-fcef-ca9b1c12a7a0.htm">DefaultDirtyCheckEventListener</a></td><td><div class="summary"> 
            Defines the default dirty-check event listener used by hibernate for
            checking the session for dirtiness in response to generated dirty-check events. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="1376cee7-88b1-68b4-f04d-09265d3ad078.htm">DefaultEvictEventListener</a></td><td><div class="summary"> 
            Defines the default evict event listener used by hibernate for evicting entities
            in response to generated flush events.  In particular, this implementation will
            remove any hard references to the entity that are held by the infrastructure
            (references held by application or other persistent instances are okay) 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="b5ed8b91-9624-e22c-7dd5-6eee5f146bb8.htm">DefaultFlushEntityEventListener</a></td><td><div class="summary">
            An event that occurs for each entity instance at flush time
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="3d028cdb-e84b-0fbd-fc92-3ab0c5bb8e68.htm">DefaultFlushEventListener</a></td><td><div class="summary"> 
            Defines the default flush event listeners used by hibernate for 
            flushing session state in response to generated flush events. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="7f8833b9-8e6f-231b-b882-6fecc3474e15.htm">DefaultInitializeCollectionEventListener</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="27b5cc11-9c33-b1eb-2983-b4ca79f967f0.htm">DefaultLoadEventListener</a></td><td><div class="summary">
            Defines the default load event listeners used by NHibernate for loading entities
            in response to generated load events.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="809bd803-09ad-006f-b17b-8708b39d2190.htm">DefaultLockEventListener</a></td><td><div class="summary"> 
            Defines the default lock event listeners used by hibernate to lock entities
            in response to generated lock events. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="da30d5ed-847e-135a-729d-aaccec6b8187.htm">DefaultMergeEventListener</a></td><td><div class="summary">
            Defines the default event listener for handling of merge events generated from a session.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="c3ab6840-537a-402f-3353-190dc3256b96.htm">DefaultPersistEventListener</a></td><td><div class="summary"> 
            Defines the default create event listener used by hibernate for creating
            transient entities in response to generated create events. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="799c73c8-c806-1a12-8a09-d8b13d5158cc.htm">DefaultPersistOnFlushEventListener</a></td><td><div class="summary">  When persist is used as the cascade action, persistOnFlush should be used</div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="72093395-d1de-3a7c-1dee-83820d6f2762.htm">DefaultPostLoadEventListener</a></td><td><div class="summary"> Call <a href="6f5da39e-0307-e336-f5fe-e6a6d4d3eb9e.htm">ILifecycle</a> interface if necessary </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="1c09220e-79b2-3aed-bf6b-86ca499a1d09.htm">DefaultPreLoadEventListener</a></td><td><div class="summary"> 
            Called before injecting property values into a newly 
            loaded entity instance. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="6ea66335-13c0-d60e-ee06-32f0cd4dd30f.htm">DefaultRefreshEventListener</a></td><td><div class="summary"> 
            Defines the default refresh event listener used by hibernate for refreshing entities
            in response to generated refresh events. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="7a008e42-04dc-225c-4487-e98139aa4b1d.htm">DefaultReplicateEventListener</a></td><td><div class="summary"> 
            Defines the default replicate event listener used by Hibernate to replicate
            entities in response to generated replicate events. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="59098a9c-07a3-a957-26da-49ea9b7682e4.htm">DefaultSaveEventListener</a></td><td><div class="summary"> An event handler for save() events</div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="420599a5-4c98-36ac-7fc6-ba9b6f43413f.htm">DefaultSaveOrUpdateCopyEventListener</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="506693eb-1b5c-0754-c4cb-e80006b8226f.htm">DefaultSaveOrUpdateEventListener</a></td><td><div class="summary"> 
            Defines the default listener used by Hibernate for handling save-update events. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="87923d1b-e894-d721-732a-23c57b389478.htm">DefaultUpdateEventListener</a></td><td><div class="summary"> An event handler for update() events</div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="f8485b6c-e2a6-5297-bda4-b36874a0ded4.htm">DirtyCollectionSearchVisitor</a></td><td><div class="summary">
            A Visitor that determines if a dirty collection was found.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="7fe8e0bf-b64a-462c-b34b-0dd1866d2923.htm">EventCache</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="53a0d23c-1641-92d3-3777-638ed55e6e4e.htm">EvictVisitor</a></td><td><div class="summary"> 
            Evict any collections referenced by the object from the session cache.
            This will NOT pick up any collections that were dereferenced, so they
            will be deleted (suboptimal but not exactly incorrect). 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="a02f0c11-09be-251b-b57c-a58266294a62.htm">FlushVisitor</a></td><td><div class="summary"> 
            Process collections reachable from an entity. 
            This visitor assumes that wrap was already performed for the entity.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="59ed04d8-8214-abe0-cb4c-702b37903b14.htm">OnLockVisitor</a></td><td><div class="summary"> 
            When a transient entity is passed to lock(), we must inspect all its collections and
            1. associate any uninitialized PersistentCollections with this session
            2. associate any initialized PersistentCollections with this session, using the existing snapshot
            3. throw an exception for each "new" collection 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="2441c7bb-a706-f25f-e009-e0ccbfa7ddd2.htm">OnReplicateVisitor</a></td><td><div class="summary"> 
            When an entity is passed to replicate(), and there is an existing row, we must
            inspect all its collections and
            1. associate any uninitialized PersistentCollections with this session
            2. associate any initialized PersistentCollections with this session, using the existing snapshot
            3. execute a collection removal (SQL DELETE) for each null collection property or "new" collection 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="08a7e436-4bd8-5f6f-1113-73c4cbc00d23.htm">OnUpdateVisitor</a></td><td><div class="summary"> 
            When an entity is passed to update(), we must inspect all its collections and
            1. associate any uninitialized PersistentCollections with this session
            2. associate any initialized PersistentCollections with this session, using the existing snapshot
            3. execute a collection removal (SQL DELETE) for each null collection property or "new" collection 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="405e85e4-12a6-4903-49e6-dc0ebc9d20df.htm">ProxyVisitor</a></td><td><div class="summary">
            Reassociates uninitialized proxies with the session
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="6152244d-2df7-36bf-6586-236c2a7de270.htm">ReattachVisitor</a></td><td><div class="summary">
            Abstract superclass of visitors that reattach collections
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="b088e52e-37f0-fc06-ec86-9efd9a88b21d.htm">WrapVisitor</a></td><td><div class="summary"> 
            Wrap collections in a Hibernate collection wrapper.
            </div></td></tr></table></div><h1 class="heading"><span onclick="ExpandCollapse(enumerationToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(enumerationToggle, event)" tabindex="0"><img id="enumerationToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Enumerations</span></h1><div id="enumerationSection" class="section" name="collapseableSection" style=""><table id="typeList" class="members" frame="lhs" cellpadding="2"><col width="10%" /><tr><th class="iconColumn">
           
       </th><th class="nameColumn">Enumeration</th><th class="descriptionColumn">Description</th></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="90e3e17b-be55-c555-683f-77c5a42d29ed.htm">EntityState</a></td><td /></tr></table></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:http%3a%2f%2fgroups.google.com%2fgroup%2fnhibernate-development?Subject=NHibernate API Reference">nhibernate team</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p /><a href="www.nhforge.org" target="_blank">NHibernate</a></div></div></body></html>